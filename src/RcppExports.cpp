// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_MAC
double compute_MAC(const NumericMatrix& X_bind, const NumericMatrix& Y_bind, const NumericVector& list_i, const NumericVector& list_j, int n);
RcppExport SEXP _mBoost_compute_MAC(SEXP X_bindSEXP, SEXP Y_bindSEXP, SEXP list_iSEXP, SEXP list_jSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type X_bind(X_bindSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type Y_bind(Y_bindSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type list_i(list_iSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type list_j(list_jSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_MAC(X_bind, Y_bind, list_i, list_j, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mBoost_compute_MAC", (DL_FUNC) &_mBoost_compute_MAC, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_mBoost(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
